# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from poodle.tts.server.jimin import compat_google_grpc_pb2 as poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2


class TextToSpeechStub(object):
    """Service that implements Google Cloud Text-to-Speech API.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListVoices = channel.unary_unary(
                '/google.cloud.texttospeech.v1.TextToSpeech/ListVoices',
                request_serializer=poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.ListVoicesRequest.SerializeToString,
                response_deserializer=poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.ListVoicesResponse.FromString,
                )
        self.SynthesizeSpeech = channel.unary_unary(
                '/google.cloud.texttospeech.v1.TextToSpeech/SynthesizeSpeech',
                request_serializer=poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.SynthesizeSpeechRequest.SerializeToString,
                response_deserializer=poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.SynthesizeSpeechResponse.FromString,
                )
        self.StreamingSynthesizeSpeech = channel.unary_stream(
                '/google.cloud.texttospeech.v1.TextToSpeech/StreamingSynthesizeSpeech',
                request_serializer=poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.SynthesizeSpeechRequest.SerializeToString,
                response_deserializer=poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.SynthesizeSpeechResponse.FromString,
                )


class TextToSpeechServicer(object):
    """Service that implements Google Cloud Text-to-Speech API.
    """

    def ListVoices(self, request, context):
        """Returns a list of Voice supported for synthesis.
        NOTE(kibumh): MODIFICATION STARTS (disable google.api.http) =========
        option (google.api.http) = {
        get: "/v1/voices"
        };
        NOTE(kibumh): MODIFICATION ENDS (disable google.api.http) =========
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SynthesizeSpeech(self, request, context):
        """Synthesizes speech synchronously: receive results after all text input
        has been processed.
        NOTE(kibumh): MODIFICATION STARTS (disable google.api.http) =========
        option (google.api.http) = {
        post: "/v1/text:synthesize"
        body: "*"
        };
        NOTE(kibumh): MODIFICATION ENDS (disable google.api.http) =========
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamingSynthesizeSpeech(self, request, context):
        """NOTE(hyunseok): MODIFICATION STARTS =========
        Performs streaming speech synthesis: receive streaming results
        This method is only available via the gRPC API (not REST).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TextToSpeechServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListVoices': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVoices,
                    request_deserializer=poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.ListVoicesRequest.FromString,
                    response_serializer=poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.ListVoicesResponse.SerializeToString,
            ),
            'SynthesizeSpeech': grpc.unary_unary_rpc_method_handler(
                    servicer.SynthesizeSpeech,
                    request_deserializer=poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.SynthesizeSpeechRequest.FromString,
                    response_serializer=poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.SynthesizeSpeechResponse.SerializeToString,
            ),
            'StreamingSynthesizeSpeech': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamingSynthesizeSpeech,
                    request_deserializer=poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.SynthesizeSpeechRequest.FromString,
                    response_serializer=poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.SynthesizeSpeechResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'google.cloud.texttospeech.v1.TextToSpeech', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TextToSpeech(object):
    """Service that implements Google Cloud Text-to-Speech API.
    """

    @staticmethod
    def ListVoices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.cloud.texttospeech.v1.TextToSpeech/ListVoices',
            poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.ListVoicesRequest.SerializeToString,
            poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.ListVoicesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SynthesizeSpeech(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.cloud.texttospeech.v1.TextToSpeech/SynthesizeSpeech',
            poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.SynthesizeSpeechRequest.SerializeToString,
            poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.SynthesizeSpeechResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamingSynthesizeSpeech(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/google.cloud.texttospeech.v1.TextToSpeech/StreamingSynthesizeSpeech',
            poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.SynthesizeSpeechRequest.SerializeToString,
            poodle_dot_tts_dot_server_dot_jimin_dot_compat__google__grpc__pb2.SynthesizeSpeechResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
